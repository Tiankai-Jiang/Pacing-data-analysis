preFC_F1
contact <- 588
postFC <- dat[c((contact+1):(contact+20)),]
x <- list()
x.append(as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T)))
list.append(x, as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T)))
preFC[,1]
as.ts(preFC[,1], start=min(preFC$T), end=max(preFC$T))
x[[i]] <- as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T))
x[[1]] <- as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T))
x
type(x)
typeof(x)
typeof(x[1])
typeof(x[1][1])
x[1][1]
x[1] <- as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T))
x
x <- list()
c(x, as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T)))
x
as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T))
as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T))[1]
as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T))[19]
a <- as.ts(preFC$L_Toe, start=min(preFC$T), end=max(preFC$T))
x[[1]] <- a
x
x[[2]] <- a
x
dat <- read.csv("2.csv")
dat["Sum_L"] <- NA
dat$Sum_L <- rowSums(dat[,c(2:5)])
threshold_L <- mean(dat$Sum_L)/3
contact <- 588
off <- 683
preFC <- dat[c((contact-19):contact),]
postFC <- dat[c((contact+1):(contact+20)),]
preFO <- dat[c((off-19):off),]
postFO <- dat[c((off+1):(off+20)),]
x <- list()
for(i in 1:8){
a <- as.ts(preFC$[,i], start=min(preFC$T), end=max(preFC$T))
x[[i]] <- a
}
for(i in 1:8){
a <- as.ts(preFC[,i], start=min(preFC$T), end=max(preFC$T))
x[[i]] <- a
}
rm(x)
x <- list()
for(i in 1:8){
x[[i]] <- as.ts(preFC[,i], start=min(preFC$T), end=max(preFC$T))
#x[[i]] <- a
}
for(i in 1:8){
preFC_F1[i,] <- ar(x[i], aic = FALSE, 3)$ar
}
x[1]
preFC
for(i in 2:9){
x[[i]] <- as.ts(preFC[,i], start=min(preFC$T), end=max(preFC$T))
}
rm(x)
for(i in 1:8){
x[[i]] <- as.ts(preFC[,i+1], start=min(preFC$T), end=max(preFC$T))
}
x <- list()
for(i in 1:8){
x[[i]] <- as.ts(preFC[,i+1], start=min(preFC$T), end=max(preFC$T))
}
x[1]
x[2]
x[1][1]
for(i in 1:8){
preFC_F1[i,] <- ar(x[i], aic = FALSE, 3)$ar
}
x[1][19]
x[1]$End
typeof(x)
typeof(x[1])
x[[1]]
typeof(x[[1]])
x[[1]]
x[[2]]
typeof(x[[2]])
x
for(i in 1:8){
preFC_F1[i,] <- ar(x[[i]], aic = FALSE, 3)$ar
}
preFC_F1 <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
preFC_F1[i,] <- ar(x[[i]], aic = FALSE, 3)$ar
}
preFC_F1
dat <- read.csv("2.csv")
dat["Sum_L"] <- NA
dat$Sum_L <- rowSums(dat[,c(2:5)])
threshold_L <- mean(dat$Sum_L)/3
contact <- 588
off <- 683
AnalysisWindow <- list()
AnalysisWindow[[1]] <- dat[c((contact-19):contact),]
AnalysisWindow[[2]] <- dat[c((contact+1):(contact+20)),]
AnalysisWindow[[3]] <- dat[c((off-19):off),]
AnalysisWindow[[4]] <- dat[c((off+1):(off+20)),]
Inter <- list()
for(j in 1:4){
x <- list()
# Order: L toe, inner, outer, heel R
for(i in 1:8){
x[[i]] <- as.ts(AnalysisWindow[[j]][,i+1], start=min(AnalysisWindow[[j]]$T), end=max(AnalysisWindow[[j]]$T))
}
Inter[[j]] <-x
}
F1 <-list()
for(j in 1:4){
y <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
y[i,] <- ar(Inter[[j]][[i]], aic = FALSE, 3)$ar
}
F1[[j]] <- y
}
F1[[1]]
F1[[2]]
for(j in 2:2){
y <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
y[i,] <- ar(Inter[[j]][[i]], aic = FALSE, 3)$ar
}
F1[[j]] <- y
}
for(j in 3:4){
y <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
y[i,] <- ar(Inter[[j]][[i]], aic = FALSE, 3)$ar
}
F1[[j]] <- y
}
AnalysisWindow[[1]]
AnalysisWindow[[2]]
AnalysisWindow[[3]]
AnalysisWindow[[4]]
AnalysisWindow[[1]]
AnalysisWindow[[2]]
for(j in 1:4){
for(i in 2:9){
if(rowSums(AnalysisWindow[[j]][,i], na.rm = TRUE) == 0){
AnalysisWindow[[j]][,i][20] = 1
}
}
}
rowSums(AnalysisWindow[[2]])
colSums(AnalysisWindow[[2]])
typeof(colSums(AnalysisWindow[[2]]))
colSums(AnalysisWindow[[2]])[1]
for(j in 1:4){
tmp <- colSums(AnalysisWindow[[j]])
for(i in 2:9){
if(tmp[i] == 0){
AnalysisWindow[[j]][,i][20] = 1
}
}
}
AnalysisWindow[[2]]
AnalysisWindow[[3]]
AnalysisWindow[[4]]
dat <- read.csv("2.csv")
dat["Sum_L"] <- NA
dat$Sum_L <- rowSums(dat[,c(2:5)])
threshold_L <- mean(dat$Sum_L)/3
contact <- 588
off <- 683
#Order: preFC, postFC, preFO, postFO
AnalysisWindow <- list()
AnalysisWindow[[1]] <- dat[c((contact-19):contact),]
AnalysisWindow[[2]] <- dat[c((contact+1):(contact+20)),]
AnalysisWindow[[3]] <- dat[c((off-19):off),]
AnalysisWindow[[4]] <- dat[c((off+1):(off+20)),]
for(j in 1:4){
tmp <- colSums(AnalysisWindow[[j]])
for(i in 2:9){
if(tmp[i] == 0){
AnalysisWindow[[j]][,i][20] = 0.1
}
}
}
Inter <- list()
for(j in 1:4){
x <- list()
# Order: L toe, inner, outer, heel R
for(i in 1:8){
x[[i]] <- as.ts(AnalysisWindow[[j]][,i+1], start=min(AnalysisWindow[[j]]$T), end=max(AnalysisWindow[[j]]$T))
}
Inter[[j]] <-x
}
F1 <-list()
for(j in 3:4){
y <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
y[i,] <- ar(Inter[[j]][[i]], aic = FALSE, 3)$ar
}
F1[[j]] <- y
}
F1[[1]]
F1[[2]]
AnalysisWindow[[1]]
dat <- read.csv("2.csv")
dat["Sum_L"] <- NA
dat$Sum_L <- rowSums(dat[,c(2:5)])
threshold_L <- mean(dat$Sum_L)/3
contact <- 588
off <- 683
AnalysisWindow <- list()
AnalysisWindow[[1]] <- dat[c((contact-19):contact),]
AnalysisWindow[[2]] <- dat[c((contact+1):(contact+20)),]
AnalysisWindow[[3]] <- dat[c((off-19):off),]
AnalysisWindow[[4]] <- dat[c((off+1):(off+20)),]
for(j in 1:4){
tmp <- colSums(AnalysisWindow[[j]])
for(i in 2:9){
if(tmp[i] == 0){
AnalysisWindow[[j]][,i][20] = 1
}
}
}
AnalysisWindow[[2]]
AnalysisWindow[[3]]
Inter <- list()
for(j in 1:4){
x <- list()
# Order: L toe, inner, outer, heel R
for(i in 1:8){
x[[i]] <- as.ts(AnalysisWindow[[j]][,i+1], start=min(AnalysisWindow[[j]]$T), end=max(AnalysisWindow[[j]]$T))
}
Inter[[j]] <-x
}
Inter[[1]]
F1 <-list()
for(j in 3:4){
y <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
y[i,] <- ar(Inter[[j]][[i]], aic = FALSE, 3)$ar
}
F1[[j]] <- y
}
F1[[1]]
View(F1)
View(Inter)
Inter[[1]]
Inter[[2]]
Inter[[3]]
F1 <-list()
for(j in 1:4){
y <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
y[i,] <- ar(Inter[[j]][[i]], aic = FALSE, 3)$ar
}
F1[[j]] <- y
}
F1[[1]]
for(i in 1:4){
for(j in 2:4){
if(j > i){
print(i, j)
}
}
}
for(i in 1:4){
for(j in 2:4){
if(j > i){
print(i)
print(j)
}
}
}
help("cor")
for(i in 1:4){
for(j in 2:4){
if(j > i){
print(i+4)
print(j+4)
#append(z[[k]], cor(AnalysisWindow[[k]][,i], AnalysisWindow[[k]][,j+1], method = "pearson"))
}
}
}
for(i in 1:4){
for(j in 2:4){
if(j > i){
print(i+5)
print(j+5)
#append(z[[k]], cor(AnalysisWindow[[k]][,i], AnalysisWindow[[k]][,j+1], method = "pearson"))
}
}
}
F2 <- list()
for(k in 1:4){
z <- list()
for(i in 1:4){
for(j in 2:4){
if(j > i){
append(z[[k]], cor(AnalysisWindow[[k]][,i+1], AnalysisWindow[[k]][,j+1], method = "pearson"))
}
}
}
for(i in 1:4){
for(j in 2:4){
if(j > i){
append(z[[k]], cor(AnalysisWindow[[k]][,i+5], AnalysisWindow[[k]][,j+5], method = "pearson"))
}
}
}
F2[[k]] <- z
}
View(z)
F2 <- list()
for(k in 1:4){
z <- list()
for(i in 1:4){
for(j in 2:4){
if(j > i){
append(z, cor(AnalysisWindow[[k]][,i+1], AnalysisWindow[[k]][,j+1], method = "pearson"))
}
}
}
for(i in 1:4){
for(j in 2:4){
if(j > i){
append(z, cor(AnalysisWindow[[k]][,i+5], AnalysisWindow[[k]][,j+5], method = "pearson"))
}
}
}
F2[[k]] <- z
}
F2[[1]]
cor(AnalysisWindow[[1]][,1], AnalysisWindow[[1]][,2], method = "pearson")
append(z, cor(AnalysisWindow[[1]][,1], AnalysisWindow[[1]][,2], method = "pearson"))
z
View(z)
s <- (s, 2)
s <- c(s, 2)
b <- 1
b <- c(b, 2)
b <- NULL
b <- c(b, 2)
F2 <- list()
for(k in 1:4){
z <- NULL
for(i in 1:4){
for(j in 2:4){
if(j > i){
z <- c(z, cor(AnalysisWindow[[k]][,i+1], AnalysisWindow[[k]][,j+1], method = "pearson"))
}
}
}
for(i in 1:4){
for(j in 2:4){
if(j > i){
z <- c(z, cor(AnalysisWindow[[k]][,i+5], AnalysisWindow[[k]][,j+5], method = "pearson"))
}
}
}
F2[[k]] <- z
}
F2[[1]]
F2[[1]]
F2[[2]]
F2[[3]]
F2[[4]]
var(AnalysisWindow[[1]][,1])
var(AnalysisWindow[[1]][,8])
AnalysisWindow[[1]][,8]
F3 <- list()
for(k in 1:4){
s = 0
for(i in 2:9){
s = s + AnalysisWindow[[k]][,i]
}
F3[[k]] <- s
}
F3[[1]]
F3 <- list()
for(k in 1:4){
s = 0
for(i in 2:9){
s = s + var(AnalysisWindow[[k]][,i])
}
F3[[k]] <- s
}
F3[[1]]
F3[[2]]
F3[[3]]
F3[[4]]
rm( list=ls())
dat <- read.csv("2.csv")
dat["Sum_L"] <- NA
dat$Sum_L <- rowSums(dat[,c(2:5)])
threshold_L <- mean(dat$Sum_L)/3
subset(dat, Sum_L > 30 & Sum_L < 40)
contact <- 588
off <- 683
#Order: preFC, postFC, preFO, postFO
AnalysisWindow <- list()
AnalysisWindow[[1]] <- dat[c((contact-19):contact),]
AnalysisWindow[[2]] <- dat[c((contact+1):(contact+20)),]
AnalysisWindow[[3]] <- dat[c((off-19):off),]
AnalysisWindow[[4]] <- dat[c((off+1):(off+20)),]
for(j in 1:4){
tmp <- colSums(AnalysisWindow[[j]])
for(i in 2:9){
if(tmp[i] == 0){
AnalysisWindow[[j]][,i][20] = 1
}
}
}
Inter <- list()
for(j in 1:4){
x <- list()
# Order: L toe, inner, outer, heel R
for(i in 1:8){
x[[i]] <- as.ts(AnalysisWindow[[j]][,i+1], start=min(AnalysisWindow[[j]]$T), end=max(AnalysisWindow[[j]]$T))
}
Inter[[j]] <-x
}
F1 <-list()
for(j in 1:4){
y <- matrix(0, ncol = 3, nrow = 8)
for(i in 1:8){
y[i,] <- ar(Inter[[j]][[i]], aic = FALSE, 3)$ar
}
F1[[j]] <- y
}
F2 <- list()
for(k in 1:4){
z <- NULL
for(i in 1:4){
for(j in 2:4){
if(j > i){
z <- c(z, cor(AnalysisWindow[[k]][,i+1], AnalysisWindow[[k]][,j+1], method = "pearson"))
}
}
}
for(i in 1:4){
for(j in 2:4){
if(j > i){
z <- c(z, cor(AnalysisWindow[[k]][,i+5], AnalysisWindow[[k]][,j+5], method = "pearson"))
}
}
}
F2[[k]] <- z
}
F3 <- list()
for(k in 1:4){
s = 0
for(i in 2:9){
s = s + var(AnalysisWindow[[k]][,i])
}
F3[[k]] <- s
}
F1[[1]]
F2[[1]]
F3[[1]]
rm(x, y)
rm(x, y, contact, i, j, k, off, s, threshold_L, tmp, z, Inter)
threshold_L <- mean(dat$Sum_L)/3
library(caret)
require(caret)
require(MASS)
require(ggplot2)
dat <- read.csv("../dynamic_parameter.csv", header = FALSE)
setwd("~/Documents/Repertory/Advanced CS Experiment/dynamic")
dat <- read.csv("../dynamic_parameter.csv", header = FALSE)
folds<-createFolds(y=dat,k=5)
folds[1]
folds[2]
folds[3]
folds[4]
folds[5]
folds<-createFolds(x=dat,k=5)
folds<-createFolds(dat,k=5)
folds[1]
folds<-createFolds(dat$V1,k=5)
folds[1]
folds[2]
folds[3]
folds[4]
for(i in 1:5){
train<-dat[-folds[[i]],]
test<-dat[folds[[i]],]
train_Gait_data <- train[, 1:36]
train_Gait_label <- train[,39]
(lda.sol = lda(train_Gait_data, train_Gait_label))
p_Gait_data <- test[, 1:36]
p_Gait_label <- test[,39]
p = predict(lda.sol, p_Gait_data)
table(p_Gait_label, p$class)
}
require(caret)
require(MASS)
dat <- read.csv("../dynamic_parameter.csv", header = FALSE)
folds<-createFolds(dat$V1,k=5)
for(i in 1:5){
train<-dat[-folds[[i]],]
test<-dat[folds[[i]],]
train_Gait_data <- train[, 1:36]
train_Gait_label <- train[,39]
(lda.sol = lda(train_Gait_data, train_Gait_label))
p_Gait_data <- test[, 1:36]
p_Gait_label <- test[,39]
p = predict(lda.sol, p_Gait_data)
print(table(p_Gait_label, p$class))
}
table(p_Gait_label, p$class)
